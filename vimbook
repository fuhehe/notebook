~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                               第一讲小结


  1. 光标在屏幕文本中的移动既可以用箭头键，也可以使用 hjkl 字母键。
         h (左移)       j (下行)       k (上行)     l (右移)

  2. 欲进入 Vim 编辑器(从命令行提示符)，请输入：vim 文件名 <回车>

  3. 欲退出 Vim 编辑器，请输入 <ESC>   :q!   <回车> 放弃所有改动。
                      或者输入 <ESC>   :wq   <回车> 保存改动。

  4. 在正常模式下删除光标所在位置的字符，请按： x

  5. 欲插入或添加文本，请输入：

         i   输入欲插入文本   <ESC>             在光标前插入文本
         a   输入欲插入文本   <ESC>             在光标后插入文本
         A   输入欲添加文本   <ESC>             在一行后添加文本

特别提示：按下 <ESC> 键会带您回到正常模式或者撤消一个不想输入或部分完整
的命令。

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                               第二讲小结

  1. 欲删除光标所在位置的字符，请输入： x
  2. 欲从当前光标删除至下一个单词，请输入：dw
     欲删除当前光标所在单词至下一个单词，请输入：daw
     欲删除当前光标所在单词，请输入：diw
  3. 欲从当前光标删除至当前行末尾，请输入：d$
  4. 欲删除整行，请输入：dd

  5. 欲重复一个动作，请在它前面加上一个数字：2w
  6. 在正常模式下修改命令的格式是：
               operator   [number]   motion
     其中：
       operator - 操作符，代表要做的事情，比如 d 代表删除
       [number] - 可以附加的数字，代表动作重复的次数
       motion   - 动作，代表在所操作的文本上的移动，例如 w 代表单词(word)，
                  $ 代表行末等等。

  7. 欲移动光标到行首，请按数字0键：0

  8. 欲撤消以前的操作，请输入：u (小写的u)
     欲撤消在一行中所做的改动，请输入：U (大写的U)
     欲撤消以前的撤消命令，恢复以前的操作结果，请输入：CTRL-R

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                  第三讲小结


  1. 要重新置入已经删除的文本内容，请按小写字母 p 键。该操作可以将已删除
     的文本内容置于光标之后。如果最后一次删除的是一个整行，那么该行将置
     于当前光标所在行的下一行。

  2. 要替换光标所在位置的字符，请输入小写的 r 和要替换掉原位置字符的新字
     符即可。

  3. 要替换光标所在位置开始的后继字符，请输入大写的 R 和要替换掉原位置的
     新字符，直到所有替换完毕。

  4. 更改类命令允许您改变从当前光标所在位置直到动作指示的位置中间的文本。
     比如输入 ce 可以替换当前光标到单词的末尾的内容；输入 c$ 可以替换当
     前光标到行末的内容。

  5. 更改类命令的格式是：

         c   [number]   motion

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                               第四讲小结


  1. CTRL-G 用于显示当前光标所在位置和文件状态信息。
     G 用于将光标跳转至文件最后一行。
     先敲入一个行号然后输入大写 G 则是将光标移动至该行号代表的行。
     gg 用于将光标跳转至文件第一行。

  2. 输入 / 然后紧随一个字符串是在当前所编辑的文档中正向查找该字符串。
     输入 ? 然后紧随一个字符串则是在当前所编辑的文档中反向查找该字符串。
     完成一次查找之后按 n 键是重复上一次的命令，可在同一方向上查
     找下一个匹配字符串所在；或者按大写 N 向相反方向查找下一匹配字符串所在。
     CTRL-O 带您跳转回较旧的位置，CTRL-I 则带您到较新的位置。

  3. 光标可定位于要查找的word上，然后按下 * 键。将会取当前光标所在的word并将它作用目标字符串进行搜索。
     # 命令是 * 的反向版。（你可以用"g*"和"g#"命令来同时匹配那些包含在其它word中的字串）

  4. "\<"匹配到一个word的开始处，"\>"匹配到一个word的结束处。

  5. 如果光标当前位置是括号(、)、[、]、{、}，按 % 会将光标移动到配对的括号上。

  6. 在一行内替换头一个字符串 old 为新的字符串 new，请输入  :s/old/new
     在一行内替换所有的字符串 old 为新的字符串 new，请输入  :s/old/new/g
     在两行内替换所有的字符串 old 为新的字符串 new，请输入  :#,#s/old/new/g
     在文件内替换所有的字符串 old 为新的字符串 new，请输入  :%s/old/new/g
     进行全文替换时询问用户确认每个替换需添加 c 标志        :%s/old/new/gc

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			       第五讲小结


  1. :!command 用于执行一个外部命令 command。

     请看一些实际例子：
	 (MS-DOS)	  (Unix)
	  :!dir		   :!ls		   -  用于显示当前目录的内容。
	  :!del FILENAME   :!rm FILENAME   -  用于删除名为 FILENAME 的文件。

  2. :w FILENAME  可将当前 VIM 中正在编辑的文件保存到名为 FILENAME 的文
     件中。

  3. v motion :w FILENAME 可将当前编辑文件中可视模式下选中的内容保存到文件
     FILENAME 中。

  4. :r FILENAME 可提取磁盘文件 FILENAME 并将其插入到当前文件的光标位置
     后面。

  5. :r !dir 可以读取 dir 命令的输出并将其放置到当前文件的光标位置后面。

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                               第六讲小结

  1. 输入小写的 o 可以在光标下方打开新的一行并进入插入模式。
     输入大写的 O 可以在光标上方打开新的一行。

  2. 输入小写的 a 可以在光标所在位置之后插入文本。
     输入大写的 A 可以在光标所在行的行末之后插入文本。

  3. e 命令可以使光标移动到单词末尾。

  4. v 进入Visual模式，移动光标以覆盖你想操纵的文本范围，同时被选中的文本会以高亮显示。
     V 则能整行地选择。
     CTRL-V 可以以一个矩形的文本块为对象进行选择。
     
  5. 输入 vw 可选择当前光标至下一单词之前
     输入 vaw 可选择当前光标所在单词至下一单词之前
     输入 viw 可选择当前光标所在单词

  6. 操作符 y 复制文本，p 粘贴先前复制的文本。

  7. 输入小写的 r 可替换当前字母。
     输入大写的 R 将进入替换模式，直至按 <ESC> 键回到正常模式。

  8. 输入 :set xxx 可以设置 xxx 选项。一些有用的选项如下：
        'ic' 'ignorecase'       查找时忽略字母大小写
        'is' 'incsearch'        查找短语时显示部分匹配
        'hls' 'hlsearch'        高亮显示所有的匹配短语
     选项名可以用完整版本，也可以用缩略版本。

  9. 在选项前加上 no 可以关闭选项：  :set noic

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                  第七讲小结


  1. 输入 :help 或者按 <F1> 键或 <Help> 键可以打开帮助窗口。

  2. 输入 :help cmd 可以找到关于 cmd 命令的帮助。

  3. 输入 CTRL-W CTRL-W  可以使您在窗口之间跳转。

  4. 输入 :q 以关闭帮助窗口

  5. 您可以创建一个 vimrc 启动脚本文件用来保存您偏好的设置。

  6. 当输入 : 命令时，按 CTRL-D 可以查看可能的补全结果。
     按 <TAB> 可以使用一个补全。

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1. w 命令会将光标移动到下一个word的首字符上。
2. b 命令则将光标移动到前一个word的首字符上。
3. e 命令会将光标移动到下一个word的最后一个字符上。
4. ge 命令将光标移动到前一个word的最后一个字符上。
5. f 单字符搜索命令。命令"fx"在当前行上查找下一个字符x。可以用";"来重复查找。
6. CTRL-D命令使窗口向下移动半屏。
7. CTRL-U命令使窗口向上滚动半屏。
8. CTRL-F命令使窗口向下移动一屏。
9. CTRL-B命令使窗口向上移动一屏。
10.CTRL-Y命令使窗口向下移动一行。
11.CTRL-E命令使窗口向上移动一行。
12.zz 命令把当前行置为屏幕正中央。

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
:set nu（number）		显示行号。
:set ic			搜索时忽略大小写。
:set is（incsearch）	在键入目标字符串的过程中Vim就同时开始了搜索工作。
:set hls（hlsearch）	高亮显示搜索结果。
:set ruler			右下角显示光标位置。
:set sessionoptions+=unix,slash	会话文件以Unix格式保存。

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1. :split 上下分割窗口。
2. :vsplit 左右分割窗口。
3. :close 关闭当前分割窗口。
4. :only 只保留当前分割窗口。
5. CTRL-W w 在分割窗口间切换。
6. :tab split 新建页签。
7. gt 切换到下一个页签，gT 切换到上一个页签。
8. :mksession 把目前的状态以一个会话保存起来,以后可以据此恢复原样。
9. :source 恢复制定的会话状态。

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
:tags 列出现在你已经到过哪些tag。
:tag startlist 这个命令会带你到函数"startlist"的定义处。
:tag 跳转到当前tag序列的最后。
      你也可以给它一个前辍,让它向前跳指定的步长。比如":3tag"。
     CTRL-T也可以带一个前辍。
CTRL-] 命令会取当前光标下的word作为tag的名字并直接跳转。
CTRL-T 命令会跳到你前一次的tag处。
CTRL-W ] 分隔当前窗口并跳转到光标下的tag。（:stag tagname 也实现同样功能）

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
普通模式下：
g~ 反转大小写
gu 转换为小写
gU 转换为大写
> 增加缩进
< 减小缩进
= 自动缩进

插入模式下：
<C-h> 删除前一个字符（同退格键）
<C-w> 删除前一个单词
<C-u> 删至行首
